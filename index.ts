// Code generated by jtd-codegen for TypeScript v0.2.1

export interface FfprobeJdt {
  frames: Frames;
  library_versions: LibraryVersions;
  packets: Packets;
  packets_and_frames: PacketsAndFrames;
  pixel_formats: PixelFormats;
  program_version: ProgramVersion;
  programs: Programs;
  streams: Streams;
}

export interface Chapter {
  end: number;
  end_time: string;
  id: number;
  start: number;
  start_time: string;
  tags: { [key: string]: string };
  time_base: string;
}

export type Chapters = Chapter[];

export interface Disposition {
  attached_pic: number;
  clean_effects: number;
  comment: number;
  default: number;
  dub: number;
  forced: number;
  hearing_impaired: number;
  karaoke: number;
  lyrics: number;
  original: number;
  timed_thumbnails: number;
  visual_impaired: number;
}

export interface Format {
  bit_rate: string;
  duration: string;
  filename: string;
  format_long_name: string;
  format_name: string;
  nb_programs: number;
  nb_streams: number;
  probe_score: number;
  size: string;
  start_time: string;
  tags: { [key: string]: string };
}

export interface Frame {
  best_effort_timestamp: number;
  best_effort_timestamp_time: string;
  channel_layout: number;
  channels: number;
  key_frame: number;
  media_type: string;
  nb_samples: number;
  pkt_dts: number;
  pkt_dts_time: string;
  pkt_duration: number;
  pkt_duration_time: string;
  pkt_pos: string;
  pkt_pts: number;
  pkt_pts_time: string;
  pkt_size: string;
  sample_fmt: string;
  stream_index: number;
  type: string;
}

export type Frames = any[];

export interface LibraryVersion {
  ident: string;
  major: number;
  micro: number;
  minor: number;
  name: string;
  version: number;
}

export type LibraryVersions = LibraryVersion[];

export interface Packet {
  codec_type: string;
  convergence_duration: number;
  convergence_duration_time: string;
  dts: number;
  dts_time: string;
  duration: number;
  duration_time: string;
  flags: string;
  pos: string;
  pts: number;
  pts_time: string;
  size: string;
  stream_index: number;
  type: string;
}

export type Packets = any[];

export type PacketsAndFrames = any[];

export type PixelFormats = any[];

export interface ProgramVersion {
  compiler_ident: string;
  configuration: string;
  copyright: string;
  version: string;
}

export type Programs = any[];

export interface Stream {
  avg_frame_rate: string;
  bit_rate: string;
  bits_per_raw_sample: string;
  chroma_location: string;
  closed_captions: number;
  codec_long_name: string;
  codec_name: string;
  codec_tag: string;
  codec_tag_string: string;
  codec_time_base: string;
  codec_type: string;
  coded_height: number;
  coded_width: number;
  color_primaries: string;
  color_range: string;
  color_space: string;
  color_transfer: string;
  display_aspect_ratio: string;
  disposition: Disposition;
  duration: string;
  duration_ts: string;
  field_order: string;
  has_b_frames: number;
  height: number;
  id: string;
  index: number;
  is_avc: string;
  level: number;
  max_bit_rate: string;
  nal_length_size: number;
  nb_frames: number;
  nb_read_frames: string;
  nb_read_packets: string;
  pix_fmt: string;
  profile: string;
  r_frame_rate: string;
  refs: number;
  sample_aspect_ratio: string;
  start_pts: number;
  start_time: string;
  time_base: string;
  timecode: string;
  width: number;
}

export type Streams = Stream[];
